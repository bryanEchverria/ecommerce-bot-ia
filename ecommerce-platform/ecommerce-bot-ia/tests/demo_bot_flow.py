"""
Demo del flujo completo del bot - Simulaci√≥n sin dependencias
Muestra c√≥mo funciona el bot con productos vaporizador
"""

# Simulaci√≥n de productos disponibles para Green House (+3456789012)
PRODUCTS_GREEN_HOUSE = [
    {
        "id": "1",
        "name": "PAX 3 Vaporizador Premium", 
        "category": "vaporizador",
        "price": 75000,
        "stock": 10,
        "description": "Vaporizador de alta calidad PAX 3"
    },
    {
        "id": "2", 
        "name": "Vape Pen Cl√°sico",
        "category": "vaporizador", 
        "price": 35000,
        "stock": 15,
        "description": "Vaporizador port√°til cl√°sico"
    },
    {
        "id": "3",
        "name": "Vaporizador Arizer Solo II",
        "category": "vaporizador",
        "price": 95000, 
        "stock": 8,
        "description": "Vaporizador Arizer Solo II premium"
    }
]

# Configuraci√≥n del cliente
CLIENT_CONFIG = {
    "phone": "+3456789012",
    "client_name": "Green House",
    "business_description": "Tienda especializada en productos can√°bicos y wellness",
    "email": "admin@greenhouse.com"
}

def extract_product_from_message(message, products):
    """Extrae producto del mensaje usando l√≥gica del bot"""
    message_lower = message.lower()
    
    # Palabras clave para vaporizadores
    vapo_keywords = ['vapo', 'vaporizador', 'vape', 'pax']
    
    for product in products:
        product_name_lower = product['name'].lower()
        
        # Coincidencia exacta del nombre
        if product_name_lower in message_lower:
            return product
            
        # Coincidencia por categor√≠a y palabras clave
        if product['category'] == 'vaporizador':
            if any(keyword in message_lower for keyword in vapo_keywords):
                return product
    
    return None

def extract_quantity_from_message(message):
    """Extrae cantidad del mensaje"""
    import re
    
    numbers = re.findall(r'\d+', message)
    if numbers:
        quantity = int(numbers[0])
        if 1 <= quantity <= 100:
            return quantity
    
    # Cantidades en texto
    text_quantities = {
        'uno': 1, 'una': 1, 'un': 1,
        'dos': 2, 'tres': 3, 'cuatro': 4, 'cinco': 5
    }
    
    message_lower = message.lower()
    for text, num in text_quantities.items():
        if text in message_lower:
            return num
    
    return None

def is_purchase_confirmation(message):
    """Verifica si es confirmaci√≥n de compra"""
    confirmation_keywords = [
        'si', 'yes', 'ok', 'vale', 'confirmo', 'acepto', 'quiero'
    ]
    
    message_lower = message.lower().strip()
    return any(keyword in message_lower for keyword in confirmation_keywords)

def simulate_bot_conversation():
    """Simula conversaci√≥n completa del bot"""
    
    print("=" * 60)
    print("DEMO: FLUJO COMPLETO BOT WHATSAPP")
    print("=" * 60)
    print(f"Cliente: {CLIENT_CONFIG['client_name']}")
    print(f"Tel√©fono: {CLIENT_CONFIG['phone']}")
    print(f"Productos disponibles: {len(PRODUCTS_GREEN_HOUSE)} vaporizadores")
    print("=" * 60)
    
    # Estado de la conversaci√≥n
    conversation_state = {
        "current_product": None,
        "quantity": None,
        "total_price": None,
        "awaiting_confirmation": False
    }
    
    # Flujo de conversaci√≥n
    messages = [
        "hola",
        "que productos tienes", 
        "quiero comprar un vapo",
        "2 unidades",
        "si"
    ]
    
    for i, user_message in enumerate(messages, 1):
        print(f"\nPASO {i}:")
        print(f"Usuario: {user_message}")
        
        # Procesar mensaje
        if user_message.lower() in ['hola', 'hello']:
            bot_response = f"""¬°Hola! Bienvenido a {CLIENT_CONFIG['client_name']}

Soy tu asistente virtual y estoy aqu√≠ para ayudarte con:

‚Ä¢ Ver nuestros productos
‚Ä¢ Realizar compras  
‚Ä¢ Consultar precios
‚Ä¢ Estado de pedidos

¬øEn qu√© puedo ayudarte hoy?"""

        elif 'productos' in user_message.lower() or 'catalogo' in user_message.lower():
            bot_response = f"""**Nuestro Cat√°logo - {CLIENT_CONFIG['client_name']}**

**Vaporizador:**
  ‚Ä¢ PAX 3 Vaporizador Premium - $75,000 [Disponible]
  ‚Ä¢ Vape Pen Cl√°sico - $35,000 [Disponible] 
  ‚Ä¢ Vaporizador Arizer Solo II - $95,000 [Disponible]

¬øTe interesa alg√∫n producto? ¬°Solo dime cu√°l y te ayudo con la compra!"""

        elif 'quiero' in user_message.lower() and not conversation_state["awaiting_confirmation"]:
            # Buscar producto
            product = extract_product_from_message(user_message, PRODUCTS_GREEN_HOUSE)
            
            if product:
                conversation_state["current_product"] = product
                conversation_state["quantity"] = None
                
                bot_response = f"""¬°Excelente elecci√≥n!

**{product['name']}**
Categor√≠a: {product['category']}
Precio: ${product['price']:,}
Stock: En stock ({product['stock']})

¬øCu√°ntas unidades te gustar√≠a comprar?"""
            else:
                bot_response = "Lo siento, no encontr√© productos que coincidan con tu b√∫squeda. ¬øPodr√≠as ser m√°s espec√≠fico?"

        elif conversation_state["current_product"] and not conversation_state["quantity"]:
            # Procesar cantidad
            quantity = extract_quantity_from_message(user_message)
            
            if quantity:
                conversation_state["quantity"] = quantity
                conversation_state["total_price"] = conversation_state["current_product"]["price"] * quantity
                conversation_state["awaiting_confirmation"] = True
                
                product = conversation_state["current_product"]
                total = conversation_state["total_price"]
                
                bot_response = f"""Perfecto! Has seleccionado:

‚Ä¢ {product['name']}
‚Ä¢ Cantidad: {quantity} unidad{'es' if quantity > 1 else ''}
‚Ä¢ Precio unitario: ${product['price']:,}
‚Ä¢ **Total: ${total:,}**

¬øConfirmas esta compra?

Responde 'si' para proceder con el pago o 'no' para cancelar."""
            else:
                bot_response = f"Por favor especifica cu√°ntas unidades de {conversation_state['current_product']['name']} quieres comprar.\n\nEjemplo: '2 unidades' o simplemente '2'"

        elif conversation_state["awaiting_confirmation"]:
            if is_purchase_confirmation(user_message):
                # Simular creaci√≥n de pedido
                product = conversation_state["current_product"]
                quantity = conversation_state["quantity"] 
                total = conversation_state["total_price"]
                order_number = "ORD-000123"
                payment_url = "https://www.flow.cl/app/web/pay.php?token=abc123xyz"
                
                bot_response = f"""¬°Perfecto! Tu pedido ha sido creado exitosamente:

**Resumen del pedido:**
‚Ä¢ Producto: {product['name']}
‚Ä¢ Cantidad: {quantity} unidad{'es' if quantity > 1 else ''}
‚Ä¢ Total: ${total:,} CLP

**N√∫mero de orden:** {order_number}
**Estado:** Pendiente

**Enlace de pago:**
{payment_url}

Haz clic en el enlace para completar el pago de forma segura.

**Importante:** Guarda tu n√∫mero de orden **{order_number}** para consultar el estado de tu pedido m√°s adelante."""
                
                # Reset estado
                conversation_state = {
                    "current_product": None,
                    "quantity": None, 
                    "total_price": None,
                    "awaiting_confirmation": False
                }
            else:
                bot_response = f"¬øQuieres confirmar la compra de {conversation_state['quantity']} unidad{'es' if conversation_state['quantity'] > 1 else ''} de {conversation_state['current_product']['name']} por ${conversation_state['total_price']:,}?\n\nResponde 'si' para confirmar o 'no' para cancelar."

        print(f"Bot: {bot_response}")
        print("-" * 60)
    
    print("\n" + "=" * 60)
    print("‚úÖ FLUJO COMPLETO DEMOSTRADO")
    print("=" * 60)
    print("El bot:")
    print("‚úÖ Reconoce al cliente (Green House)")
    print("‚úÖ Muestra productos vaporizador disponibles") 
    print("‚úÖ Procesa solicitudes espec√≠ficas ('vapo' ‚Üí PAX 3)")
    print("‚úÖ Maneja cantidades correctamente")
    print("‚úÖ Genera enlace de pago Flow")
    print("‚úÖ Proporciona n√∫mero de orden para seguimiento")
    print("\nü§ñ El bot USA OpenAI y ES MUY ESPEC√çFICO en sus respuestas")

if __name__ == "__main__":
    simulate_bot_conversation()